// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/resources/color
$palette-light-primary: mat-palette($mat-grey, 200, 100, 900);
$palette-light-accent: mat-palette($mat-light-blue, 600, 100, 900);
$palette-light-warn: mat-palette($mat-red, 600, 100, 800);

$palette-dark-primary: mat-palette($mat-grey, 900, 100, 900);
$palette-dark-accent: mat-palette($mat-light-blue, 300, 100, 500);
$palette-dark-warn: mat-palette($mat-red, 500, 100, 900);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$light-theme: mat-light-theme(
  (
    color: (
      primary: $palette-light-primary,
      accent: $palette-light-accent,
      warn: $palette-light-warn,
    ),
  )
);
$dark-theme: mat-dark-theme(
  (
    color: (
      primary: $palette-dark-primary,
      accent: $palette-dark-accent,
      warn: $palette-dark-warn,
    ),
  )
);

// Use color palettes from your template
@mixin class-theme($palette, $shade) {
  $background: mat-color($palette, $shade);
  $color: mat-color($palette, #{$shade}-contrast);
  background: $background;
  color: $color;

  &.transparent {
    background: rgba($background, 0.1);
    color: unset;
  }

  &.active {
    background: rgba($color, 0.1);
    color: unset;
  }
}

@mixin class-theme-contrast($palette, $shade) {
  color: mat-color($palette, $shade);
}

@mixin class-builder($palette-primary, $palette-accent, $palette-warn) {
  .theme-primary {
    @include class-theme($palette-primary, default);
  }

  .theme-primary-contrast {
    @include class-theme-contrast($palette-primary, default);
  }

  .theme-primary-darker {
    @include class-theme($palette-primary, darker);
  }

  .theme-primary-contrast-darker {
    @include class-theme-contrast($palette-primary, darker);
  }

  .theme-primary-lighter {
    @include class-theme($palette-primary, lighter);
  }

  .theme-primary-contrast-lighter {
    @include class-theme-contrast($palette-primary, lighter);
  }

  .theme-accent {
    @include class-theme($palette-accent, default);
  }

  .theme-accent-contrast {
    @include class-theme-contrast($palette-accent, default);
  }

  .theme-accent-darker {
    @include class-theme($palette-accent, darker);
  }

  .theme-accent-contrast-darker {
    @include class-theme-contrast($palette-accent, darker);
  }

  .theme-accent-lighter {
    @include class-theme($palette-accent, lighter);
  }

  .theme-accent-contrast-lighter {
    @include class-theme-contrast($palette-accent, lighter);
  }

  .theme-warn {
    @include class-theme($palette-warn, default);
  }

  .theme-warn-contrast {
    @include class-theme-contrast($palette-warn, default);
  }

  .theme-warn-darker {
    @include class-theme($palette-warn, darker);
  }

  .theme-warn-contrast-darker {
    @include class-theme-contrast($palette-warn, darker);
  }

  .theme-warn-lighter {
    @include class-theme($palette-warn, lighter);
  }

  .theme-warn-contrast-lighter {
    @include class-theme-contrast($palette-warn, lighter);
  }
}

// body themes, light by default
@include angular-material-theme($light-theme);
@include class-builder(
  $palette-light-primary,
  $palette-light-accent,
  $palette-light-warn
);

.theme-dark {
  @include angular-material-color($dark-theme);
  @include class-builder(
    $palette-dark-primary,
    $palette-dark-accent,
    $palette-dark-warn
  );
}
